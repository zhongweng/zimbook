Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-03-04T20:36:01+08:00

====== java内存模型 ======
Created 星期六 04 三月 2017

	[[+happens-before]] 
	[[+重排序]]
	[[+DoubleCheckLock]]
	[[+内存屏障]] 
	
在揭开面纱之前，我们需要认识几个基础概念：内存屏障（memory Barriers），指令重排序，happens-before规则，as-if-serial语义。

===== 抽象结构 =====
	java线程之间的通信由java内存模型（JMM）控制，JMM决定一个线程对共享变量（实例域、静态域和数组）的写入何时对其它线程可见。
	
	从抽象的角度来看，JMM定义了线程和主内存Main Memory（堆内存）之间的抽象关系：线程之间的共享变量存储在主内存中，每个线程都有自己的本地内存Local Memory（只是一个抽象概念，物理上不存在），存储了该线程的共享变量副本。
	
	所以，线程A和线程B之前需要通信的话，必须经过一下两个步骤：
	1、线程A把本地内存中更新过的共享变量刷新到主内存中。
	2、线程B到主内存中读取线程A之前更新过的共享变量。

